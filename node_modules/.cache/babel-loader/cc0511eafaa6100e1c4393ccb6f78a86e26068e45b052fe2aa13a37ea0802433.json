{"ast":null,"code":"import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nvar cacheContainer = {\n  cache: null\n};\nvar missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport var createSelector = function createSelector() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n  var selector = function selector() {\n    for (var _len2 = arguments.length, selectorArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      selectorArgs[_key2] = arguments[_key2];\n    }\n    var stateOrApiRef = selectorArgs[0],\n      instanceId = selectorArgs[1];\n    var isApiRef = !!stateOrApiRef.current;\n    var cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    var state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n    var cache = cacheContainer.cache;\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n    var newSelector = reselectCreateSelector.apply(void 0, args);\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport var unstable_resetCreateSelectorCache = function unstable_resetCreateSelectorCache(cacheKey) {\n  if (typeof cacheKey !== 'undefined') {\n    if (cacheContainer.cache && cacheContainer.cache[cacheKey]) {\n      delete cacheContainer.cache[cacheKey];\n    }\n  } else {\n    cacheContainer.cache = null;\n  }\n};","map":{"version":3,"names":["createSelector","reselectCreateSelector","buildWarning","cacheContainer","cache","missingInstanceIdWarning","_len","arguments","length","args","Array","_key","selector","_len2","selectorArgs","_key2","stateOrApiRef","instanceId","isApiRef","current","cacheKey","state","process","env","NODE_ENV","get","newSelector","apply","Map","set","acceptsApiRef","unstable_resetCreateSelectorCache"],"sources":["/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@mui/x-data-grid/utils/createSelector.js"],"sourcesContent":["import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: null\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n\n  const selector = (...selectorArgs) => {\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n\n    const {\n      cache\n    } = cacheContainer;\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCreateSelectorCache = cacheKey => {\n  if (typeof cacheKey !== 'undefined') {\n    if (cacheContainer.cache && cacheContainer.cache[cacheKey]) {\n      delete cacheContainer.cache[cacheKey];\n    }\n  } else {\n    cacheContainer.cache = null;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}