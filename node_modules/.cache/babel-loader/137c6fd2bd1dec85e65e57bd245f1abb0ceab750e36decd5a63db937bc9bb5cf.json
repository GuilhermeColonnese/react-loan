{"ast":null,"code":"import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport var getGridStringQuickFilterFn = function getGridStringQuickFilterFn(value) {\n  if (!value) {\n    return null;\n  }\n  var filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return function (_ref) {\n    var columnValue = _ref.value;\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport var getGridStringOperators = function getGridStringOperators() {\n  var disableTrim = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return [{\n    value: 'contains',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!filterItem.value) {\n        return null;\n      }\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      var filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n      return function (_ref2) {\n        var value = _ref2.value;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'equals',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!filterItem.value) {\n        return null;\n      }\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      var collator = new Intl.Collator(undefined, {\n        sensitivity: 'base',\n        usage: 'search'\n      });\n      return function (_ref3) {\n        var value = _ref3.value;\n        return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'startsWith',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!filterItem.value) {\n        return null;\n      }\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      var filterRegex = new RegExp(\"^\".concat(escapeRegExp(filterItemValue), \".*$\"), 'i');\n      return function (_ref4) {\n        var value = _ref4.value;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'endsWith',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!filterItem.value) {\n        return null;\n      }\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      var filterRegex = new RegExp(\".*\".concat(escapeRegExp(filterItemValue), \"$\"), 'i');\n      return function (_ref5) {\n        var value = _ref5.value;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'isEmpty',\n    getApplyFilterFn: function getApplyFilterFn() {\n      return function (_ref6) {\n        var value = _ref6.value;\n        return value === '' || value == null;\n      };\n    },\n    requiresFilterValue: false\n  }, {\n    value: 'isNotEmpty',\n    getApplyFilterFn: function getApplyFilterFn() {\n      return function (_ref7) {\n        var value = _ref7.value;\n        return value !== '' && value != null;\n      };\n    },\n    requiresFilterValue: false\n  }, {\n    value: 'isAnyOf',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n        return null;\n      }\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(function (val) {\n        return val.trim();\n      });\n      var collator = new Intl.Collator(undefined, {\n        sensitivity: 'base',\n        usage: 'search'\n      });\n      return function (_ref8) {\n        var value = _ref8.value;\n        return value != null ? filterItemValue.some(function (filterValue) {\n          return collator.compare(filterValue, value.toString() || '') === 0;\n        }) : false;\n      };\n    },\n    InputComponent: GridFilterInputMultipleValue\n  }];\n};","map":{"version":3,"names":["GridFilterInputValue","escapeRegExp","GridFilterInputMultipleValue","getGridStringQuickFilterFn","value","filterRegex","RegExp","_ref","columnValue","test","toString","getGridStringOperators","disableTrim","arguments","length","undefined","getApplyFilterFn","filterItem","filterItemValue","trim","_ref2","InputComponent","collator","Intl","Collator","sensitivity","usage","_ref3","compare","concat","_ref4","_ref5","_ref6","requiresFilterValue","_ref7","Array","isArray","map","val","_ref8","some","filterValue"],"sources":["/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@mui/x-data-grid/colDef/gridStringOperators.js"],"sourcesContent":["import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}