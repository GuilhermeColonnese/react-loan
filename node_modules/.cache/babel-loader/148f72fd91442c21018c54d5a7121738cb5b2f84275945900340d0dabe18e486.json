{"ast":null,"code":"import _toConsumableArray from \"/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"],\n  _excluded2 = [\"changeReason\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useForkRef } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridDensityHeaderGroupingMaxDepthSelector } from '../hooks/features/density/densitySelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var editable = ownerState.editable,\n    editing = ownerState.editing,\n    selected = ownerState.selected,\n    isLastVisible = ownerState.isLastVisible,\n    rowHeight = ownerState.rowHeight,\n    classes = ownerState.classes;\n  var slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nvar EmptyCell = function EmptyCell(_ref) {\n  var width = _ref.width;\n  if (!width) {\n    return null;\n  }\n  var style = {\n    width: width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nvar GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  var _apiRef$current$getRo;\n  var selected = props.selected,\n    rowId = props.rowId,\n    row = props.row,\n    index = props.index,\n    styleProp = props.style,\n    position = props.position,\n    rowHeight = props.rowHeight,\n    className = props.className,\n    visibleColumns = props.visibleColumns,\n    renderedColumns = props.renderedColumns,\n    containerWidth = props.containerWidth,\n    firstColumnToRender = props.firstColumnToRender,\n    cellFocus = props.cellFocus,\n    cellTabIndex = props.cellTabIndex,\n    editRowsState = props.editRowsState,\n    _props$isLastVisible = props.isLastVisible,\n    isLastVisible = _props$isLastVisible === void 0 ? false : _props$isLastVisible,\n    onClick = props.onClick,\n    onDoubleClick = props.onDoubleClick,\n    onMouseEnter = props.onMouseEnter,\n    onMouseLeave = props.onMouseLeave,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var apiRef = useGridApiContext();\n  var ref = React.useRef(null);\n  var rootProps = useGridRootProps();\n  var currentPage = useGridVisibleRows(apiRef, rootProps);\n  var columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  var sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  var treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  var headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  var handleRef = useForkRef(ref, refProp);\n  var ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  var _ref2 = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n      hasScrollX: false,\n      hasScrollY: false\n    },\n    hasScrollX = _ref2.hasScrollX,\n    hasScrollY = _ref2.hasScrollY;\n  var ownerState = {\n    selected: selected,\n    isLastVisible: isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight: rowHeight\n  };\n  var classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(function () {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(function () {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      var rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId); // pinned rows are not part of the visible rows\n\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    var rootElement = ref.current;\n    var hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    var resizeObserver = new ResizeObserver(function (entries) {\n      var _entries = _slicedToArray(entries, 1),\n        entry = _entries[0];\n      var height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return function () {\n      return resizeObserver.disconnect();\n    };\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  var publish = React.useCallback(function (eventName, propHandler) {\n    return function (event) {\n      // Ignore portal\n      // The target is not an element when triggered by a Select inside the cell\n      // See https://github.com/mui/material-ui/issues/10534\n      if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n        return;\n      } // The row might have been deleted\n\n      if (!apiRef.current.getRow(rowId)) {\n        return;\n      }\n      apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n      if (propHandler) {\n        propHandler(event);\n      }\n    };\n  }, [apiRef, rowId]);\n  var publishClick = React.useCallback(function (event) {\n    var cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    var field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n      var column = apiRef.current.getColumn(field);\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  var getCell = React.useCallback(function (column, cellProps) {\n    var _rootProps$components;\n    var cellParams = apiRef.current.getCellParams(rowId, column.field);\n    var classNames = [];\n    var disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n    var editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    var content = null;\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n      var updatedRow = row;\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n      var editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n      var params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellStateRest, {\n        api: apiRef.current\n      });\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n    var hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    var tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    return /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n      value: cellParams.value,\n      field: column.field,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      formattedValue: cellParams.formattedValue,\n      align: column.align || 'left',\n      cellMode: cellParams.cellMode,\n      colIndex: cellProps.indexRelativeToAllColumns,\n      isEditable: cellParams.isEditable,\n      hasFocus: hasFocus,\n      tabIndex: tabIndex,\n      className: clsx(classNames),\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n      children: content\n    }), column.field);\n  }, [apiRef, cellTabIndex, editRowsState, cellFocus, rootProps, row, rowHeight, rowId, treeDepth, sortModel.length]);\n  var sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n  var minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    var numberOfBaseSizes = 0;\n    var maximumSize = Object.entries(sizes).reduce(function (acc, _ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        size = _ref4[1];\n      var isBaseHeight = /^base[A-Z]/.test(key);\n      if (!isBaseHeight) {\n        return acc;\n      }\n      numberOfBaseSizes += 1;\n      if (size > acc) {\n        return size;\n      }\n      return acc;\n    }, 0);\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  var style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight: minHeight\n  });\n  if (sizes != null && sizes.spacingTop) {\n    var property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n  if (sizes != null && sizes.spacingBottom) {\n    var _property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    var propertyValue = style[_property]; // avoid overriding existing value\n\n    if (typeof propertyValue !== 'number') {\n      propertyValue = parseInt(propertyValue || '0', 10);\n    }\n    propertyValue += sizes.spacingBottom;\n    style[_property] = propertyValue;\n  }\n  var rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n    var indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n    var rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage: indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  var randomNumber = randomNumberBetween(10000, 20, 80);\n  var cells = [];\n  for (var i = 0; i < renderedColumns.length; i += 1) {\n    var column = renderedColumns[i];\n    var indexRelativeToAllColumns = firstColumnToRender + i;\n    var isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    var removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    var showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    var cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (row) {\n        var _cellColSpanInfo$cell = cellColSpanInfo.cellProps,\n          colSpan = _cellColSpanInfo$cell.colSpan,\n          width = _cellColSpanInfo$cell.width;\n        var cellProps = {\n          width: width,\n          colSpan: colSpan,\n          showRightBorder: showRightBorder,\n          indexRelativeToAllColumns: indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        var _width = cellColSpanInfo.cellProps.width;\n        var contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(rootProps.components.SkeletonCell, {\n          width: _width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n  var emptyCellWidth = containerWidth - columnsTotalWidth;\n  var eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx.apply(void 0, _toConsumableArray(rowClassNames).concat([classes.root, className])),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","PropTypes","clsx","unstable_composeClasses","composeClasses","useForkRef","GridEditModes","GridRowModes","GridCellModes","useGridApiContext","getDataGridUtilityClass","gridClasses","useGridRootProps","gridColumnsTotalWidthSelector","useGridSelector","useGridVisibleRows","findParentElementFromClassName","GRID_CHECKBOX_SELECTION_COL_DEF","GRID_ACTIONS_COLUMN_TYPE","GRID_DETAIL_PANEL_TOGGLE_FIELD","gridSortModelSelector","gridRowTreeDepthSelector","gridDensityHeaderGroupingMaxDepthSelector","randomNumberBetween","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","editable","editing","selected","isLastVisible","rowHeight","classes","slots","root","EmptyCell","_ref","width","style","className","GridRow","forwardRef","props","refProp","_apiRef$current$getRo","rowId","row","index","styleProp","position","visibleColumns","renderedColumns","containerWidth","firstColumnToRender","cellFocus","cellTabIndex","editRowsState","_props$isLastVisible","onClick","onDoubleClick","onMouseEnter","onMouseLeave","other","apiRef","ref","useRef","rootProps","currentPage","columnsTotalWidth","sortModel","treeDepth","headerGroupingMaxDepth","handleRef","ariaRowIndex","_ref2","current","getRootDimensions","hasScrollX","hasScrollY","getRowMode","Edit","editMode","Row","useLayoutEffect","ResizeObserver","unstable_storeRowHeightMeasurement","clientHeight","range","rowIndex","getRowIndexRelativeToVisibleRows","unstable_setLastMeasuredRowIndex","rootElement","hasFixedHeight","undefined","resizeObserver","entries","_entries","_slicedToArray","entry","height","borderBoxSize","length","blockSize","contentRect","observe","disconnect","publish","useCallback","eventName","propHandler","event","target","nodeType","currentTarget","contains","getRow","publishEvent","getRowParams","publishClick","cell","field","getAttribute","getCellMode","column","getColumn","type","getCell","cellProps","_rootProps$components","cellParams","getCellParams","classNames","disableDragEvents","disableColumnReorder","disableReorder","rowReordering","Object","keys","cellClassName","push","editCellState","content","renderCell","_rootProps$classes","api","renderEditCell","_rootProps$classes2","updatedRow","unstable_getRowWithUpdatedValues","editCellStateRest","params","getCellClassName","hasFocus","id","tabIndex","cellMode","components","Cell","value","showRightBorder","formattedValue","align","colIndex","indexRelativeToAllColumns","isEditable","colSpan","componentsProps","children","sizes","unstable_getRowInternalSizes","minHeight","numberOfBaseSizes","maximumSize","reduce","acc","_ref3","_ref4","key","size","isBaseHeight","test","maxHeight","spacingTop","property","rowSpacingType","spacingBottom","propertyValue","parseInt","rowClassNames","unstable_applyPipeProcessors","getRowClassName","_currentPage$range","indexRelativeToCurrentPage","firstRowIndex","rowParams","isFirstVisible","rows","randomNumber","cells","i","isLastColumn","removeLastBorderRight","showCellRightBorder","disableExtendRowFullWidth","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","_cellColSpanInfo$cell","contentWidth","Math","round","SkeletonCell","emptyCellWidth","eventHandlers","role","apply","_toConsumableArray","concat","process","env","NODE_ENV","propTypes","object","number","isRequired","bool","lastColumnToRender","oneOf","arrayOf","oneOfType","string"],"sources":["/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@mui/x-data-grid/components/GridRow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"],\n      _excluded2 = [\"changeReason\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useForkRef } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridDensityHeaderGroupingMaxDepthSelector } from '../hooks/features/density/densitySelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width\n}) => {\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    position,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId); // pinned rows are not part of the visible rows\n\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const getCell = React.useCallback((column, cellProps) => {\n    var _rootProps$components;\n\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellStateRest, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    return /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n      value: cellParams.value,\n      field: column.field,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      formattedValue: cellParams.formattedValue,\n      align: column.align || 'left',\n      cellMode: cellParams.cellMode,\n      colIndex: cellProps.indexRelativeToAllColumns,\n      isEditable: cellParams.isEditable,\n      hasFocus: hasFocus,\n      tabIndex: tabIndex,\n      className: clsx(classNames),\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n      children: content\n    }), column.field);\n  }, [apiRef, cellTabIndex, editRowsState, cellFocus, rootProps, row, rowHeight, rowId, treeDepth, sortModel.length]);\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n  let minHeight = rowHeight;\n\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n\n      if (!isBaseHeight) {\n        return acc;\n      }\n\n      numberOfBaseSizes += 1;\n\n      if (size > acc) {\n        return size;\n      }\n\n      return acc;\n    }, 0);\n\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight\n  });\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    let propertyValue = style[property]; // avoid overriding existing value\n\n    if (typeof propertyValue !== 'number') {\n      propertyValue = parseInt(propertyValue || '0', 10);\n    }\n\n    propertyValue += sizes.spacingBottom;\n    style[property] = propertyValue;\n  }\n\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (row) {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(rootProps.components.SkeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}