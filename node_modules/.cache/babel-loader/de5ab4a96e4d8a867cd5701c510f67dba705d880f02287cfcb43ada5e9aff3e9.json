{"ast":null,"code":"import _regeneratorRuntime from\"/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _process$env$REACT_AP=process.env.REACT_APP_LIFERAY_API,REACT_APP_LIFERAY_API=_process$env$REACT_AP===void 0?window.location.origin:_process$env$REACT_AP;export var getLiferayAuthenticationToken=function getLiferayAuthenticationToken(){try{// eslint-disable-next-line no-undef\nvar token=Liferay.authToken;return token;}catch(error){console.warn('Not able to find Liferay auth token\\n',error);return'';}};var baseFetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(url){var _ref2,body,_ref2$method,method,headers,apiPath,response,data,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_ref2=_args.length>1&&_args[1]!==undefined?_args[1]:{},body=_ref2.body,_ref2$method=_ref2.method,method=_ref2$method===void 0?'GET':_ref2$method;headers=new Headers({'Content-Type':'application/json','x-csrf-token':getLiferayAuthenticationToken()});apiPath=REACT_APP_LIFERAY_API;// Basic Auth for local development testing only\n// Auth token is the best method for live use and\n// is available when acting as a Web Component (Custom Element)\nif(getLiferayAuthenticationToken()===\"\"){headers=new Headers({'Authorization':'Basic '+btoa('test@liferay.com:test'),'Content-Type':'application/json'});apiPath=\"https://webserver-lctdemobrt1-prd.lfr.cloud\";}_context.next=6;return fetch(apiPath+'/'+url,_objectSpread(_objectSpread({},body&&{body:JSON.stringify(body)}),{},{headers:headers,method:method}));case 6:response=_context.sent;_context.next=9;return response.json();case 9:data=_context.sent;return _context.abrupt(\"return\",{data:data});case 11:case\"end\":return _context.stop();}},_callee);}));return function baseFetch(_x){return _ref.apply(this,arguments);};}();export{REACT_APP_LIFERAY_API};export default baseFetch;","map":{"version":3,"names":["_process$env$REACT_AP","process","env","REACT_APP_LIFERAY_API","window","location","origin","getLiferayAuthenticationToken","token","Liferay","authToken","error","console","warn","baseFetch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","_ref2","body","_ref2$method","method","headers","apiPath","response","data","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","Headers","btoa","fetch","_objectSpread","JSON","stringify","sent","json","abrupt","stop","_x","apply"],"sources":["/Users/guilherme/Downloads/react-loan-calculator-main/src/common/services/liferay/api.js"],"sourcesContent":["const {REACT_APP_LIFERAY_API = window.location.origin} = process.env;\n\nexport const getLiferayAuthenticationToken = () => {\n\ttry {\n\t\t// eslint-disable-next-line no-undef\n\t\tconst token = Liferay.authToken;\n\n\t\treturn token;\n\t} catch (error) {\n\t\tconsole.warn('Not able to find Liferay auth token\\n', error);\n\n\t\treturn '';\n\t}\n};\nconst baseFetch = async (url, {body, method = 'GET'} = {}) => {\n\n    let headers = new Headers({\n\t\t'Content-Type': 'application/json',\n\t\t'x-csrf-token': getLiferayAuthenticationToken()\n\t})\n\n\tlet apiPath = REACT_APP_LIFERAY_API;\n\n\t// Basic Auth for local development testing only\n\t// Auth token is the best method for live use and\n\t// is available when acting as a Web Component (Custom Element)\n\n\tif (getLiferayAuthenticationToken()===\"\"){\n\t\theaders = new Headers({\n\t    \t'Authorization': 'Basic ' + btoa('test@liferay.com:test'), \n\t\t\t'Content-Type': 'application/json'\n\t    });\n\t    apiPath = \"https://webserver-lctdemobrt1-prd.lfr.cloud\";\n\t}\n\n\tconst response = await fetch(apiPath + '/' + url, {\n\t\t...(body && {body: JSON.stringify(body)}),\n\t\theaders: headers,\n\t\tmethod,\n\t});\n\n\tconst data = await response.json();\n\n\treturn {data};\n};\n\nexport {REACT_APP_LIFERAY_API};\n\nexport default baseFetch;\n"],"mappings":"gbAAA,IAAAA,qBAAA,CAAyDC,OAAO,CAACC,GAAG,CAA7DC,qBAAqB,CAArBA,qBAAqB,CAAAH,qBAAA,UAAGI,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAAN,qBAAA,CAErD,MAAO,IAAM,CAAAO,6BAA6B,CAAG,QAAhC,CAAAA,6BAA6BA,CAAA,CAAS,CAClD,GAAI,CACH;AACA,GAAM,CAAAC,KAAK,CAAGC,OAAO,CAACC,SAAS,CAE/B,MAAO,CAAAF,KAAK,CACb,CAAE,MAAOG,KAAK,CAAE,CACfC,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAEF,KAAK,CAAC,CAE5D,MAAO,EAAE,CACV,CACD,CAAC,CACD,GAAM,CAAAG,SAAS,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,MAAAC,KAAA,CAAAC,IAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,OAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAC,SAAA,QAAAb,mBAAA,GAAAc,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAd,KAAA,CAAAQ,KAAA,CAAAO,MAAA,IAAAP,KAAA,MAAAQ,SAAA,CAAAR,KAAA,IAA2B,CAAC,CAAC,CAA1BP,IAAI,CAAAD,KAAA,CAAJC,IAAI,CAAAC,YAAA,CAAAF,KAAA,CAAEG,MAAM,CAANA,MAAM,CAAAD,YAAA,UAAG,KAAK,CAAAA,YAAA,CAE3CE,OAAO,CAAG,GAAI,CAAAa,OAAO,CAAC,CAC5B,cAAc,CAAE,kBAAkB,CAClC,cAAc,CAAE/B,6BAA6B,CAAC,CAC/C,CAAC,CAAC,CAEEmB,OAAO,CAAGvB,qBAAqB,CAEnC;AACA;AACA;AAEA,GAAII,6BAA6B,CAAC,CAAC,GAAG,EAAE,CAAC,CACxCkB,OAAO,CAAG,GAAI,CAAAa,OAAO,CAAC,CAClB,eAAe,CAAE,QAAQ,CAAGC,IAAI,CAAC,uBAAuB,CAAC,CAC5D,cAAc,CAAE,kBACd,CAAC,CAAC,CACFb,OAAO,CAAG,6CAA6C,CAC3D,CAACO,QAAA,CAAAE,IAAA,SAEsB,CAAAK,KAAK,CAACd,OAAO,CAAG,GAAG,CAAGN,GAAG,CAAAqB,aAAA,CAAAA,aAAA,IAC3CnB,IAAI,EAAI,CAACA,IAAI,CAAEoB,IAAI,CAACC,SAAS,CAACrB,IAAI,CAAC,CAAC,MACxCG,OAAO,CAAEA,OAAO,CAChBD,MAAM,CAANA,MAAM,EACN,CAAC,QAJIG,QAAQ,CAAAM,QAAA,CAAAW,IAAA,CAAAX,QAAA,CAAAE,IAAA,SAMK,CAAAR,QAAQ,CAACkB,IAAI,CAAC,CAAC,QAA5BjB,IAAI,CAAAK,QAAA,CAAAW,IAAA,QAAAX,QAAA,CAAAa,MAAA,UAEH,CAAClB,IAAI,CAAJA,IAAI,CAAC,2BAAAK,QAAA,CAAAc,IAAA,MAAA5B,OAAA,GACb,kBA9BK,CAAAL,SAASA,CAAAkC,EAAA,SAAAjC,IAAA,CAAAkC,KAAA,MAAAnB,SAAA,OA8Bd,CAED,OAAQ3B,qBAAqB,EAE7B,cAAe,CAAAW,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}