{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var GridToolbarColumnsButton = /*#__PURE__*/React.forwardRef(function GridToolbarColumnsButton(props, ref) {\n  var _rootProps$components;\n  var onClick = props.onClick,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var apiRef = useGridApiContext();\n  var rootProps = useGridRootProps();\n  var _useGridSelector = useGridSelector(apiRef, gridPreferencePanelStateSelector),\n    open = _useGridSelector.open,\n    openedPanelValue = _useGridSelector.openedPanelValue;\n  var showColumns = function showColumns(event) {\n    if (open && openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n    }\n    onClick == null ? void 0 : onClick(event);\n  }; // Disable the button if the corresponding is disabled\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n    ref: ref,\n    size: \"small\",\n    \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    startIcon: /*#__PURE__*/_jsx(rootProps.components.ColumnSelectorIcon, {})\n  }, other, {\n    onClick: showColumns\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n    children: apiRef.current.getLocaleText('toolbarColumns')\n  }));\n});","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useGridSelector","gridPreferencePanelStateSelector","GridPreferencePanelsValue","useGridApiContext","useGridRootProps","jsx","_jsx","GridToolbarColumnsButton","forwardRef","props","ref","_rootProps$components","onClick","other","apiRef","rootProps","_useGridSelector","open","openedPanelValue","showColumns","event","columns","current","hidePreferences","showPreferences","disableColumnSelector","components","BaseButton","size","getLocaleText","startIcon","ColumnSelectorIcon","componentsProps","baseButton","children"],"sources":["/Users/guilherme/Downloads/react-loan-calculator-main/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarColumnsButton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridToolbarColumnsButton = /*#__PURE__*/React.forwardRef(function GridToolbarColumnsButton(props, ref) {\n  var _rootProps$components;\n\n  const {\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    open,\n    openedPanelValue\n  } = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n\n  const showColumns = event => {\n    if (open && openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  }; // Disable the button if the corresponding is disabled\n\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n    ref: ref,\n    size: \"small\",\n    \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    startIcon: /*#__PURE__*/_jsx(rootProps.components.ColumnSelectorIcon, {})\n  }, other, {\n    onClick: showColumns\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n    children: apiRef.current.getLocaleText('toolbarColumns')\n  }));\n});"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,IAAMC,SAAS,GAAG,CAAC,SAAS,CAAC;AAC7B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,gCAAgC,QAAQ,mEAAmE;AACpH,SAASC,yBAAyB,QAAQ,iEAAiE;AAC3G,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,IAAMC,wBAAwB,GAAG,aAAaR,KAAK,CAACS,UAAU,CAAC,SAASD,wBAAwBA,CAACE,KAAK,EAAEC,GAAG,EAAE;EAClH,IAAIC,qBAAqB;EAEnB,IACJC,OAAO,GACLH,KAAK,CADPG,OAAO;IAEHC,KAAK,GAAGhB,6BAA6B,CAACY,KAAK,EAAEX,SAAS,CAAC;EAE7D,IAAMgB,MAAM,GAAGX,iBAAiB,CAAC,CAAC;EAClC,IAAMY,SAAS,GAAGX,gBAAgB,CAAC,CAAC;EACpC,IAAAY,gBAAA,GAGIhB,eAAe,CAACc,MAAM,EAAEb,gCAAgC,CAAC;IAF3DgB,IAAI,GAAAD,gBAAA,CAAJC,IAAI;IACJC,gBAAgB,GAAAF,gBAAA,CAAhBE,gBAAgB;EAGlB,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAGC,KAAK,EAAI;IAC3B,IAAIH,IAAI,IAAIC,gBAAgB,KAAKhB,yBAAyB,CAACmB,OAAO,EAAE;MAClEP,MAAM,CAACQ,OAAO,CAACC,eAAe,CAAC,CAAC;IAClC,CAAC,MAAM;MACLT,MAAM,CAACQ,OAAO,CAACE,eAAe,CAACtB,yBAAyB,CAACmB,OAAO,CAAC;IACnE;IAEAT,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACQ,KAAK,CAAC;EAC3C,CAAC,CAAC,CAAC;;EAGH,IAAIL,SAAS,CAACU,qBAAqB,EAAE;IACnC,OAAO,IAAI;EACb;EAEA,OAAO,aAAanB,IAAI,CAACS,SAAS,CAACW,UAAU,CAACC,UAAU,EAAE/B,QAAQ,CAAC;IACjEc,GAAG,EAAEA,GAAG;IACRkB,IAAI,EAAE,OAAO;IACb,YAAY,EAAEd,MAAM,CAACQ,OAAO,CAACO,aAAa,CAAC,qBAAqB,CAAC;IACjEC,SAAS,EAAE,aAAaxB,IAAI,CAACS,SAAS,CAACW,UAAU,CAACK,kBAAkB,EAAE,CAAC,CAAC;EAC1E,CAAC,EAAElB,KAAK,EAAE;IACRD,OAAO,EAAEO;EACX,CAAC,EAAE,CAACR,qBAAqB,GAAGI,SAAS,CAACiB,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGrB,qBAAqB,CAACsB,UAAU,EAAE;IAC1GC,QAAQ,EAAEpB,MAAM,CAACQ,OAAO,CAACO,aAAa,CAAC,gBAAgB;EACzD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}